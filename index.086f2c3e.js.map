{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,SAAS,aAAa,CAAC,SAEzC,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,GAAI,AAAuB,OAAvB,EAAI,MAAM,CAAC,OAAO,EAMtB,I,EAAM,EAAQ,AAFA,CAAC,OAAQ,WAAY,MAAO,SAAS,CAE/B,OAAO,CAAC,EAAI,MAAM,CAAC,WAAW,CAAC,WAAW,IAqB9D,AAnBkB,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAAG,EAAU,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAAE,IAAI,CAAC,SAAC,CAAA,CAAG,CAAlD,EACE,IAAM,EAAS,EAAE,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,WAAW,GAClD,EAAS,EAAE,QAAQ,CAAC,EAAM,CAAC,WAAW,CAAC,WAAW,GAExD,OAAQ,GACN,KAAK,EACL,KAAK,EACH,OAAO,EAAO,aAAa,CAAC,EAC9B,MAAK,EACH,MAAO,CAAC,EAAS,CAAC,CACpB,MAAK,EACH,IAAM,EAAY,SAAC,CAAnB,EAA2B,MAAA,CAAC,EAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,G,EAEzD,OAAO,EAAU,GAAU,EAAU,EACvC,SACE,OAAO,CACX,CACF,GAES,OAAO,CAAC,SAAC,CAAlB,EAA0B,OAAA,EAAU,MAAM,CAAC,E,GAC7C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar thead = document.querySelector(\"thead\");\nvar tableBody = document.querySelector(\"tbody\");\nthead.addEventListener(\"click\", function(evt) {\n    if (evt.target.tagName !== \"TH\") return;\n    var TYPES = [\n        \"name\",\n        \"position\",\n        \"age\",\n        \"salary\"\n    ];\n    var index = TYPES.indexOf(evt.target.textContent.toLowerCase());\n    var sortRows = _to_consumable_array(tableBody.children).sort(function(a, b) {\n        var valueA = a.children[index].textContent.toLowerCase();\n        var valueB = b.children[index].textContent.toLowerCase();\n        switch(index){\n            case 0:\n            case 1:\n                return valueA.localeCompare(valueB);\n            case 2:\n                return +valueA - +valueB;\n            case 3:\n                var formatted = function(num) {\n                    return +num.slice(1).split(\",\").join(\"\");\n                };\n                return formatted(valueA) - formatted(valueB);\n            default:\n                return 0;\n        }\n    });\n    sortRows.forEach(function(row) {\n        return tableBody.append(row);\n    });\n});\n\n//# sourceMappingURL=index.086f2c3e.js.map\n","'use strict';\n\nconst thead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\n\nthead.addEventListener('click', (evt) => {\n  if (evt.target.tagName !== 'TH') {\n    return;\n  }\n\n  const TYPES = ['name', 'position', 'age', 'salary'];\n\n  const index = TYPES.indexOf(evt.target.textContent.toLowerCase());\n\n  const sortRows = [...tableBody.children].sort((a, b) => {\n    const valueA = a.children[index].textContent.toLowerCase();\n    const valueB = b.children[index].textContent.toLowerCase();\n\n    switch (index) {\n      case 0:\n      case 1:\n        return valueA.localeCompare(valueB);\n      case 2:\n        return +valueA - +valueB;\n      case 3:\n        const formatted = (num) => +num.slice(1).split(',').join('');\n\n        return formatted(valueA) - formatted(valueB);\n      default:\n        return 0;\n    }\n  });\n\n  sortRows.forEach((row) => tableBody.append(row));\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","thead","document","querySelector","tableBody","addEventListener","evt","target","tagName","index","TYPES","indexOf","textContent","toLowerCase","sortRows","_to_consumable_array","_array_without_holes","isArray","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","valueA","valueB","localeCompare","formatted","num","split","join","forEach","row","append"],"version":3,"file":"index.086f2c3e.js.map"}